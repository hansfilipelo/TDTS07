<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

bool request[2][2] = {{false, false}, {false, false}};
bool ack[2] = {false, false};
chan s_on[4];

int floor_div(int num, int denom)
{
    return num/denom;
}</declaration>
	<template>
		<name x="5" y="5">TL</name>
		<parameter>const int id</parameter>
		<declaration>// Place local declarations here.
bool light = false;

</declaration>
		<location id="id0" x="-850" y="-391">
			<committed/>
		</location>
		<location id="id1" x="-578" y="-484">
			<committed/>
		</location>
		<location id="id2" x="-791" y="-366">
			<name x="-808" y="-357">green</name>
			<label kind="invariant" x="-833" y="-340">ack[floor_div(id,2)]</label>
		</location>
		<location id="id3" x="-527" y="-518">
			<name x="-537" y="-552">unhandled_vehicle</name>
			<label kind="invariant" x="-501" y="-527">not(ack[floor_div(id,2)])</label>
		</location>
		<location id="id4" x="-1071" y="-510">
			<name x="-1081" y="-544">wait</name>
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-943" y="-365">ack[floor_div(id,2)]</label>
			<nail x="-850" y="-365"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="guard" x="-561" y="-476">not(ack[floor_div(id,2)])</label>
			<nail x="-527" y="-484"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id1"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id4"/>
			<label kind="guard" x="-1139" y="-459">not ack[floor_div(id,2)]</label>
			<label kind="assignment" x="-1139" y="-442">light = 0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-688" y="-425">ack[floor_div(id,2)]</label>
			<label kind="assignment" x="-688" y="-408">light = 1,
request[floor_div(id,2)][id%2] = 0</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-977" y="-535">s_on[id]?</label>
			<label kind="assignment" x="-841" y="-535">request[floor_div(id,2)][id%2] = 1</label>
		</transition>
	</template>
	<template>
		<name>Sensor</name>
		<parameter>const int id</parameter>
		<location id="id5" x="-3085" y="-2465">
			<name x="-3110" y="-2508">SensorOn</name>
		</location>
		<location id="id6" x="-3221" y="-2465">
			<name x="-3255" y="-2499">SensorOff</name>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<nail x="-3153" y="-2431"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-3187" y="-2524">s_on[id]!</label>
			<nail x="-3153" y="-2499"/>
		</transition>
	</template>
	<template>
		<name>Controller</name>
		<declaration>const int time_limit = 20;
clock time;</declaration>
		<location id="id7" x="-170" y="-238">
			<committed/>
		</location>
		<location id="id8" x="-331" y="93">
			<label kind="invariant" x="-341" y="110">time &lt; 1</label>
		</location>
		<location id="id9" x="-17" y="-34">
			<label kind="invariant" x="-68" y="-68">time &lt; 1</label>
		</location>
		<location id="id10" x="-476" y="25">
			<name x="-527" y="-8">AckNS</name>
			<label kind="invariant" x="-620" y="8">time &lt;= time_limit</label>
		</location>
		<location id="id11" x="136" y="25">
			<name x="153" y="-8">AckWE</name>
			<label kind="invariant" x="153" y="8">time &lt;= time_limit</label>
		</location>
		<location id="id12" x="-170" y="-280">
			<name x="-180" y="-314">NoAck</name>
			<label kind="invariant" x="-127" y="-365">(not (request[0][0] or
request[0][1] or
request[1][0] or
request[1][1]))</label>
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id7"/>
			<target ref="id12"/>
			<label kind="guard" x="-382" y="-272">(not (request[0][0] or
request[0][1] or
request[1][0] or
request[1][1]))</label>
			<nail x="-238" y="-255"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id7"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id10"/>
			<label kind="assignment" x="-374" y="34">ack[0] = true,
time = 0</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id11"/>
			<label kind="assignment" x="-34" y="-8">ack[1] = true,
time = 0</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="guard" x="-697" y="59">(request[0][0] or 
request[0][1]) and
not (request[1][0] or 
request[1][1]) and
time &gt;= time_limit</label>
			<label kind="assignment" x="-697" y="144">time = 0</label>
			<nail x="-612" y="25"/>
			<nail x="-476" y="153"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="guard" x="238" y="68">(request[1][0] or 
request[1][1]) and
not (request[0][0] or 
request[0][1]) and
time &gt;= time_limit</label>
			<label kind="assignment" x="238" y="153">time = 0</label>
			<nail x="280" y="25"/>
			<nail x="136" y="161"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="guard" x="153" y="-221">(not (request[0][0] or 
request[0][1] or
request[1][0] or 
request[1][1])) and
time &gt;= time_limit</label>
			<label kind="assignment" x="153" y="-136">ack[1] = false</label>
			<nail x="136" y="-280"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="guard" x="-629" y="-221">(not (request[0][0] or
request[0][1] or
request[1][0] or
request[1][1])) and
time &gt;= time_limit</label>
			<label kind="assignment" x="-629" y="-136">ack[0] = false</label>
			<nail x="-476" y="0"/>
			<nail x="-476" y="-280"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id8"/>
			<label kind="guard" x="-246" y="102">(request[0][0] or 
request[0][1]) and
time &gt;= time_limit</label>
			<label kind="assignment" x="-246" y="153">ack[1] = false,
time = 0</label>
			<nail x="-187" y="93"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="-246" y="-119">(request[1][0] or 
request[1][1]) and
time &gt;= time_limit</label>
			<label kind="assignment" x="-246" y="-68">ack[0] = false,
time = 0</label>
			<nail x="-187" y="-34"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id10"/>
			<label kind="guard" x="-399" y="-187">request[0][0] or 
request[0][1]</label>
			<label kind="assignment" x="-399" y="-153">ack[0] = true,
time = 0</label>
			<nail x="-178" y="-229"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id11"/>
			<label kind="guard" x="-34" y="-187">request[1][0] or 
request[1][1]</label>
			<label kind="assignment" x="-34" y="-153">ack[1] = true,
time = 0</label>
			<nail x="-161" y="-229"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
TL0 = TL(0);
TL1 = TL(1);
TL2 = TL(2);
TL3 = TL(3);
S0 = Sensor(0);
S1 = Sensor(1);
S2 = Sensor(2);
S3 = Sensor(3);
// List one or more processes to be composed into a system.
system TL0, TL1, TL2, TL3, Controller, S0, S1, S2, S3;
    </system>
	<queries>
		<query>
			<formula>A[] not ((TL0.green or TL1.green) and (TL2.green or TL3.green))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>TL0.unhandled_vehicle --&gt; TL0.green
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not deadlock
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
